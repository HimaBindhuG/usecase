{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./admin.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdminComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class AdminComponent {\n  constructor(formBuilder, adminService, router) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.router = router;\n    this.admin = {\n      email: '',\n      password: '',\n      name: '',\n      dept: '',\n      address: '',\n      gender: '',\n      dob: '',\n      phone: '',\n      posting: ''\n    };\n    this.isLoggedIn = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.admin.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.admin.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, AdminComponent_div_13_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \" -->\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.admin.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.admin.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICWjEC,+BAAuC;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;ADA3D,OAAM,MAAOC,cAAc;EAiBzBC,YACUC,WAAwB,EACxBC,YAA0B,EAC1BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAlBhB,UAAK,GAAU;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;KACV;IAED,eAAU,GAAG,KAAK;IAClB,iBAAY,GAAG,EAAE;EAMb;EAEJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;MACtCX,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACmB,QAAQ,CAAC;MAChCX,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACmB,QAAQ;KACnC,CAAC;IACF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACf,YAAY,CAACe,UAAU,EAAE;EAClD;EAEAC,OAAO;IACL,IAAI,CAAChB,YAAY,CAACiB,UAAU,CAAC,IAAI,CAACC,KAAK,CAAChB,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACf,QAAQ,CAAC,CAACgB,SAAS,CAAC,MAAK;MACjF,IAAI,CAACJ,UAAU,GAAG,IAAI;MACtB,IAAI,CAACd,MAAM,CAACmB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACxB,YAAY,CAACyB,WAAW,CAAC,IAAI,CAACb,SAAS,CAACc,KAAK,CAAC,CAACP,SAAS,CAAC,MAAK;MACjE,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ,IAAI,CAAC3B,YAAY,CAAC2B,MAAM,EAAE;IAC1B,IAAI,CAACZ,UAAU,GAAG,KAAK;IACvB,IAAI,CAACd,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AApDWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BpC,8BAA4B;MACpBA;QAAA,OAAYqC,aAAS;MAAA,EAAC;MAC1BrC,8BAAwB;MACHA,6BAAa;MAAAA,iBAAQ;MACxCA,gCAAoG;MAAnCA;QAAA;MAAA,EAAyB;MAA1FA,iBAAoG;MAEtGA,8BAAwB;MACAA,wBAAQ;MAAAA,iBAAQ;MACtCA,iCAAgH;MAAtCA;QAAA;MAAA,EAA4B;MAAtGA,iBAAgH;MAElHA,kCAA4E;MAAAA,sBAAK;MAAAA,iBAAS;MAE5FA,iEAA+D;MACjEA,iBAAM;MAyFHA,qBAAG;;;;MAlGiEA,eAAyB;MAAzBA,yCAAyB;MAIhBA,eAA4B;MAA5BA,4CAA4B;MAE1DA,eAA6B;MAA7BA,qCAA6B;MAE1DA,eAAkB;MAAlBA,uCAAkB","names":["Validators","i0","AdminComponent","constructor","formBuilder","adminService","router","email","password","name","dept","address","gender","dob","phone","posting","ngOnInit","adminForm","group","required","isLoggedIn","onLogin","loginAdmin","admin","subscribe","navigate","error","errorMessage","message","onSubmit","createAdmin","value","logout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Admin } from './interfaces';\nimport { AdminService } from './admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  admin: Admin = {\n    email: '', \n    password: '',\n    name: '',\n    dept: '',\n    address: '',\n    gender: '',\n    dob: '',\n    phone: '',\n    posting: ''\n  };\n  adminForm!: FormGroup;\n  isLoggedIn = false;\n  errorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n\n}\n\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n","<div class=\"container mt-5\">\n  <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"admin.email\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"admin.password\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Login</button>\n  </form>\n  <div class=\"mt-3\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n</div>\n\n\n\n\n\n<!-- <app-admin></app-admin>\n\n<div>\n    <h2>Admin Dashboard</h2>\n    <p>Welcome, admin!</p>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  \n  <h1>Admin List</h1>\n  \n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Department</th>\n        <th>Address</th>\n        <th>Gender</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Posting</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let admin of admins\">\n        <td>{{ admin.name }}</td>\n        <td>{{ admin.email }}</td>\n        <td>{{ admin.dept }}</td>\n        <td>{{ admin.address }}</td>\n        <td>{{ admin.gender }}</td>\n        <td>{{ admin.dob }}</td>\n        <td>{{ admin.phone }}</td>\n        <td>{{ admin.posting }}</td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <hr>\n  \n  <!-- <h2>Create Admin</h2>\n  \n  <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" formControlName=\"password\">\n    </div>\n    <div>\n      <label for=\"dept\">Department:</label>\n      <input type=\"text\" id=\"dept\" formControlName=\"dept\">\n    </div>\n    <div>\n      <label for=\"address\">Address:</label>\n      <input type=\"text\" id=\"address\" formControlName=\"address\">\n    </div>\n    <div>\n      <label for=\"gender\">Gender:</label>\n      <select id=\"gender\" formControlName=\"gender\">\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dob\">Date of Birth:</label>\n      <input type=\"date\" id=\"dob\" formControlName=\"dob\">\n    </div>\n    <div>\n      <label for=\"phone\">Phone:</label>\n      <input type=\"tel\" id=\"phone\" formControlName=\"phone\">\n    </div>\n    <div>\n      <label for=\"posting\">Posting:</label>\n      <input type=\"text\" id=\"posting\" formControlName=\"posting\">\n    </div>\n    <button type=\"submit\">Create Admin</button>\n  </form> -->\n   -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}