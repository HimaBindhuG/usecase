{"ast":null,"code":"export class AdminComponent {\n  constructor(formBuilder, adminService) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.admins = [];\n    this.adminForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.getAdmins();\n  }\n  getAdmins() {\n    this.adminService.getAdmins().subscribe(admins => this.admins = admins);\n  }\n  onSubmit() {\n    if (this.adminForm.valid) {\n      const admin = this.adminForm;\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,cAAc;EAIzBC,YACUC,WAAwB,EACxBC,YAA0B;IAD1B,gBAAW,GAAXD,WAAW;IACX,iBAAY,GAAZC,YAAY;IAJtB,WAAM,GAAkB,EAAE;IAMxB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACF,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACH,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,IAAI,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACC,QAAQ,CAAC;MAC/BK,OAAO,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACC,QAAQ,CAAC;MAClCM,MAAM,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACC,QAAQ,CAAC;MACjCO,GAAG,EAAE,CAAC,EAAE,EAAER,UAAU,CAACC,QAAQ,CAAC;MAC9BQ,KAAK,EAAE,CAAC,EAAE,EAAET,UAAU,CAACC,QAAQ,CAAC;MAChCS,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACC,QAAQ;KAClC,CAAC;EACJ;EAEAU,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAAChB,YAAY,CAACgB,SAAS,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAM,IAAI,CAACA,MAAM,GAAGA,MAAO,CAAC;EAC7E;EAEAC,QAAQ;IACN,IAAI,IAAI,CAAClB,SAAS,CAACmB,KAAK,EAAE;MACxB,MAAMC,KAAK,GAAG,IAAI,CAACpB,SAAS;;EAClC","names":["AdminComponent","constructor","formBuilder","adminService","adminForm","group","name","Validators","required","email","password","minLength","dept","address","gender","dob","phone","posting","ngOnInit","getAdmins","subscribe","admins","onSubmit","valid","admin"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["export class AdminComponent implements OnInit {\n  adminForm: FormGroup;\n  admins: AdminCreate[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService\n  ) {\n    this.adminForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAdmins();\n  }\n\n  getAdmins(): void {\n    this.adminService.getAdmins().subscribe((admins) => (this.admins = admins));\n  }\n\n  onSubmit(): void {\n    if (this.adminForm.valid) {\n      const admin = this.adminForm\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}