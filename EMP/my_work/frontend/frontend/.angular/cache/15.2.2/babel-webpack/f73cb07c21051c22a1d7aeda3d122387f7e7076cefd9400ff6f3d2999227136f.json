{"ast":null,"code":"\"use strict\";\n\n// import { Component, OnInit } from '@angular/core';\n// import { Admin } from './interfaces';\n// import { AdminService } from './admin.service';\n// import { NgForm } from '@angular/forms';\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css']\n// })\n// export class AdminComponent implements OnInit{\n//   admin: Admin = {\n//     name: '',\n//     email: '',\n//     password: '',\n//     dept: '',\n//     address: '',\n//     gender: '',\n//     dob: '',\n//     phone: '',\n//     posting: ''\n//   };\n//   errorMessage: string = '';\n//   authService: any;\n//   router: any;\n//   constructor(private adminService: AdminService) {}\n//   ngOnInit(): void { }\n//   onLogin(loginForm: NgForm): void {\n//     const { email, password } = loginForm.value;\n//     this.authService.loginAdmin(email, password).subscribe(\n//       () => {\n//         this.router.navigate(['/admin/dashboard']);\n//       },\n//       (error: string) => {\n//         this.errorMessage = error;\n//       }\n//     );\n//   }\n//   onSubmit() {\n//     this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(isValid => {\n//       if (isValid) {\n//         console.log('Login successful');\n//       } else {\n//         console.log('Invalid email or password');\n//       }\n//     }, error => {\n//       console.log(error);\n//     });\n//   }\n// }\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { Admin } from './interfaces';\n// import { AdminService } from './admin.service';\n// import { NgForm } from '@angular/forms';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css']\n// })\n// export class AdminComponent implements OnInit{\n//   admin: Admin = {\n//     name: '',\n//     email: '',\n//     password: '',\n//     dept: '',\n//     address: '',\n//     gender: '',\n//     dob: '',\n//     phone: '',\n//     posting: ''\n//   };\n//   errorMessage: string = '';\n//   authService: any;\n//   router: any;\n\n//   constructor(private adminService: AdminService) {}\n//   ngOnInit(): void { }\n\n//   onLogin(loginForm: NgForm): void {\n//     const { email, password } = loginForm.value;\n\n//     this.authService.loginAdmin(email, password).subscribe(\n//       () => {\n//         this.router.navigate(['/admin/dashboard']);\n//       },\n//       (error: string) => {\n//         this.errorMessage = error;\n//       }\n//     );\n//   }\n\n//   onSubmit() {\n//     this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(isValid => {\n//       if (isValid) {\n//         console.log('Login successful');\n//       } else {\n//         console.log('Invalid email or password');\n//       }\n//     }, error => {\n//       console.log(error);\n//     });\n//   }\n// }\n\n\n\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}