{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminComponent = class AdminComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.admin = {\n      email: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n  login() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(isValid => {\n      if (isValid) {\n        this.isLoggedIn = true;\n      } else {\n        alert(\"Invalid credentials\");\n      }\n    }, error => {\n      console.log(error);\n      alert(\"An error occurred while logging in\");\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFhC,UAAK,GAAU;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAC1C,eAAU,GAAG,KAAK;EACgC;EAElDC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,YAAY,CAACI,UAAU,EAAE;EAClD;EAEAC,KAAK;IACH,IAAI,CAACL,YAAY,CAACM,UAAU,CAAC,IAAI,CAACC,KAAK,CAACN,KAAK,EAAE,IAAI,CAACM,KAAK,CAACL,QAAQ,CAAC,CAACM,SAAS,CAACC,OAAO,IAAG;MACtF,IAAIA,OAAO,EAAE;QACX,IAAI,CAACL,UAAU,GAAG,IAAI;OACvB,MAAM;QACLM,KAAK,CAAC,qBAAqB,CAAC;;IAEhC,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBD,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ,IAAI,CAACd,YAAY,CAACc,MAAM,EAAE;IAC1B,IAAI,CAACV,UAAU,GAAG,KAAK;EACzB;CACD;AA3BYN,cAAc,eAL1BD,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWnB,cAAc,CA2B1B;SA3BYA,cAAc;AAqC3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","names":["Component","AdminComponent","constructor","adminService","email","password","ngOnInit","isLoggedIn","login","loginAdmin","admin","subscribe","isValid","alert","error","console","log","logout","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Admin } from '../admin';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  admin: Admin = { email: '', password: '' };\n  isLoggedIn = false;\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n\n  login(): void {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(isValid => {\n      if (isValid) {\n        this.isLoggedIn = true;\n      } else {\n        alert(\"Invalid credentials\");\n      }\n    }, error => {\n      console.log(error);\n      alert(\"An error occurred while logging in\");\n    });\n  }\n\n  logout(): void {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n  }\n}\n\n\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}