{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction EmployeeComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r3.manager);\n  }\n}\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/employees';\n  }\n  getEmployees() {\n    return this.http.get(this.apiUrl);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});\nexport class EmployeeComponent {\n  constructor(http) {\n    this.http = http;\n    this.employees = [];\n  }\n  ngOnInit() {\n    // Make a GET request to retrieve all employees\n    this.http.get('http://localhost:3000/employees').subscribe(response => {\n      this.employees = response;\n    });\n  }\n  addEmployee(name, manager) {\n    // Make a POST request to add a new employee\n    this.http.post('http://localhost:3000/employees', {\n      name,\n      manager\n    }).subscribe(response => {\n      // Add the new employee to the employees array\n      this.employees.push(response);\n    });\n  }\n}\nEmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || EmployeeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeComponent,\n  selectors: [[\"app-employee\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"required\", \"\"], [\"name\", \"\"], [\"for\", \"manager\"], [\"id\", \"manager\", \"type\", \"text\", \"name\", \"manager\", \"required\", \"\"], [\"manager\", \"\"], [\"type\", \"submit\"]],\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Employee List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"th\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Manager\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, EmployeeComponent_tr_8_Template, 5, 2, \"tr\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"h2\");\n      i0.ɵɵtext(10, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function EmployeeComponent_Template_form_ngSubmit_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r1 = i0.ɵɵreference(15);\n        const _r2 = i0.ɵɵreference(20);\n        return i0.ɵɵresetView(ctx.addEmployee(_r1.value, _r2.value));\n      });\n      i0.ɵɵelementStart(12, \"label\", 2);\n      i0.ɵɵtext(13, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 3, 4)(16, \"br\");\n      i0.ɵɵelementStart(17, \"label\", 5);\n      i0.ɵɵtext(18, \"Manager:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6, 7)(21, \"br\");\n      i0.ɵɵelementStart(22, \"button\", 8);\n      i0.ɵɵtext(23, \"Add Employee\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMEA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAD3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAAsB;IAAtBA,yCAAsB;;;ACD9B,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEV;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;EACnC;;AAPWL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAM,SAAfN,eAAe;EAAAO,YAFd;AAAM;AAiBpB,OAAM,MAAOC,iBAAiB;EAG5BP,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,cAAS,GAAU,EAAE;EAEmB;EAExCO,QAAQ;IACN;IACA,IAAI,CAACP,IAAI,CAACE,GAAG,CAAQ,iCAAiC,CAAC,CAACM,SAAS,CAAEC,QAAQ,IAAI;MAC7E,IAAI,CAACC,SAAS,GAAGD,QAAQ;IAC3B,CAAC,CAAC;EACJ;EAEAE,WAAW,CAACC,IAAY,EAAEC,OAAe;IACvC;IACA,IAAI,CAACb,IAAI,CAACc,IAAI,CAAM,iCAAiC,EAAE;MAAEF,IAAI;MAAEC;IAAO,CAAE,CAAC,CAACL,SAAS,CAAEC,QAAQ,IAAI;MAC/F;MACA,IAAI,CAACC,SAAS,CAACK,IAAI,CAACN,QAAQ,CAAC;IAC/B,CAAC,CAAC;EACJ;;AAlBWH,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDtB9BvB,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,6BAAO;MAECA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAElBA,gEAGK;MACPA,iBAAQ;MAERA,0BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MACrBA,gCAA0D;MAApDA;QAAAA;QAAA;QAAA;QAAA,OAAYA,oDAAsC;MAAA,EAAC;MACvDA,iCAAkB;MAAAA,sBAAK;MAAAA,iBAAQ;MAC/BA,+BAAwD;MAExDA,iCAAqB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACrCA,+BAAiE;MAEjEA,kCAAsB;MAAAA,6BAAY;MAAAA,iBAAS;;;MAdlBA,eAAY;MAAZA,uCAAY","names":["i0","EmployeeService","constructor","http","getEmployees","get","apiUrl","factory","providedIn","EmployeeComponent","ngOnInit","subscribe","response","employees","addEmployee","name","manager","post","push","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\employee\\employee.component.html","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\employee\\employee.component.ts"],"sourcesContent":["<h1>Employee List</h1>\n<table>\n  <tr>\n    <th>Name</th>\n    <th>Manager</th>\n  </tr>\n  <tr *ngFor=\"let employee of employees\">\n    <td>{{ employee.name }}</td>\n    <td>{{ employee.manager }}</td>\n  </tr>\n</table>\n\n<h2>Add Employee</h2>\n<form (ngSubmit)=\"addEmployee(name.value, manager.value)\">\n  <label for=\"name\">Name:</label>\n  <input id=\"name\" type=\"text\" name=\"name\" #name required>\n  <br>\n  <label for=\"manager\">Manager:</label>\n  <input id=\"manager\" type=\"text\" name=\"manager\" #manager required>\n  <br>\n  <button type=\"submit\">Add Employee</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private apiUrl = 'http://localhost:3000/employees';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees() {\n    return this.http.get(this.apiUrl);\n  }\n}\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  employees: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    // Make a GET request to retrieve all employees\n    this.http.get<any[]>('http://localhost:3000/employees').subscribe((response) => {\n      this.employees = response;\n    });\n  }\n\n  addEmployee(name: string, manager: string): void {\n    // Make a POST request to add a new employee\n    this.http.post<any>('http://localhost:3000/employees', { name, manager }).subscribe((response) => {\n      // Add the new employee to the employees array\n      this.employees.push(response);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}