{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./admin.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdminComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogin());\n    });\n    i0.ɵɵelementStart(5, \"div\")(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_div_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.admin.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n    i0.ɵɵtext(11, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_div_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.admin.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵtext(14, \"Login\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.admin.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.admin.password);\n  }\n}\nfunction AdminComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Create Admin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"button\", 8);\n    i0.ɵɵtext(5, \"Create Admin\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.adminForm);\n  }\n}\nexport class AdminComponent {\n  constructor(fb, adminService, router) {\n    this.fb = fb;\n    this.adminService = adminService;\n    this.router = router;\n    this.admin = {\n      email: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n    this.adminForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required]\n    });\n    this.admins = [];\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n    this.getAdmins();\n  }\n  getAdmins() {\n    this.adminService.getAdmins().subscribe(admins => {\n      this.admins = admins;\n    });\n  }\n  onSubmit() {\n    const adminData = this.adminForm.value;\n    this.adminService.createAdmin(adminData).subscribe(() => {\n      // Clear the form and reset validation\n      this.adminForm.reset();\n      Object.keys(this.adminForm.controls).forEach(key => {\n        this.adminForm.get(key)?.setErrors(null);\n      });\n      // Update the list of admins\n      this.getAdmins();\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.router.navigate(['/login']);\n  }\n  loginAdmin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(result => {\n      localStorage.setItem('token', result.token);\n      this.router.navigate(['/createadmin']);\n    });\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"click\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [3, \"formGroup\", \"ngSubmit\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AdminComponent_div_0_Template, 15, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, AdminComponent_div_1_Template, 6, 1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AdminComponent_Template_button_click_2_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(3, \"Logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" -->\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AdminComponent","constructor","fb","adminService","router","email","password","adminForm","group","name","required","dept","address","gender","dob","phone","posting","admins","ngOnInit","isLoggedIn","getAdmins","subscribe","onSubmit","adminData","value","createAdmin","reset","Object","keys","controls","forEach","key","get","setErrors","logout","navigate","loginAdmin","admin","result","localStorage","setItem","token","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AdminService } from './admin.service';\nimport { Admin } from './interfaces';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n})\nexport class AdminComponent implements OnInit {\n  adminForm: FormGroup;\n  admins: Admin[] | null | undefined;\n  admin = { email: '', password: '' };\n  isLoggedIn = false;\n\n  constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n    this.adminForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password:['', Validators.required],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required],\n    });\n    this.admins = [];\n  }\n\n  ngOnInit():void {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n    this.getAdmins();\n  }\n\n  getAdmins(): void {\n    this.adminService.getAdmins().subscribe(admins => {\n      this.admins = admins;\n    });\n  }\n\n  onSubmit(): void {\n    const adminData = this.adminForm.value;\n    this.adminService.createAdmin(adminData).subscribe(() => {\n      // Clear the form and reset validation\n      this.adminForm.reset();\n      Object.keys(this.adminForm.controls).forEach(key => {\n        this.adminForm.get(key)?.setErrors(null);\n      });\n      // Update the list of admins\n      this.getAdmins();\n    });\n  }\n\n  logout(): void {\n    this.adminService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  loginAdmin(): void {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe((result: any) => {\n      localStorage.setItem('token', result.token);\n      this.router.navigate(['/createadmin']);\n    });\n  }\n}\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n","<div *ngIf=\"!isLoggedIn\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" name=\"email\" required [(ngModel)]=\"admin.email\">\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" required [(ngModel)]=\"admin.password\">\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n\n<div *ngIf=\"isLoggedIn\">\n  <h2>Create Admin</h2>\n  <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- form fields here -->\n    <button type=\"submit\">Create Admin</button>\n  </form>\n</div>\n\n<button (click)=\"logout()\">Logout</button>\n\n\n\n\n\n\n<!-- <app-admin></app-admin>\n\n<div>\n    <h2>Admin Dashboard</h2>\n    <p>Welcome, admin!</p>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  \n  <h1>Admin List</h1>\n  \n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Department</th>\n        <th>Address</th>\n        <th>Gender</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Posting</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let admin of admins\">\n        <td>{{ admin.name }}</td>\n        <td>{{ admin.email }}</td>\n        <td>{{ admin.dept }}</td>\n        <td>{{ admin.address }}</td>\n        <td>{{ admin.gender }}</td>\n        <td>{{ admin.dob }}</td>\n        <td>{{ admin.phone }}</td>\n        <td>{{ admin.posting }}</td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <hr>\n  \n  <!-- <h2>Create Admin</h2>\n  \n  <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" formControlName=\"password\">\n    </div>\n    <div>\n      <label for=\"dept\">Department:</label>\n      <input type=\"text\" id=\"dept\" formControlName=\"dept\">\n    </div>\n    <div>\n      <label for=\"address\">Address:</label>\n      <input type=\"text\" id=\"address\" formControlName=\"address\">\n    </div>\n    <div>\n      <label for=\"gender\">Gender:</label>\n      <select id=\"gender\" formControlName=\"gender\">\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dob\">Date of Birth:</label>\n      <input type=\"date\" id=\"dob\" formControlName=\"dob\">\n    </div>\n    <div>\n      <label for=\"phone\">Phone:</label>\n      <input type=\"tel\" id=\"phone\" formControlName=\"phone\">\n    </div>\n    <div>\n      <label for=\"posting\">Posting:</label>\n      <input type=\"text\" id=\"posting\" formControlName=\"posting\">\n    </div>\n    <button type=\"submit\">Create Admin</button>\n  </form> -->\n   -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}