{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/admin';\n  }\n  getAdmins() {\n    return this.http.get(this.apiUrl);\n  }\n  createAdmin(admin) {\n    return this.http.post(this.apiUrl, admin).pipe(catchError(error => {\n      // Handle the error here\n      console.log(error);\n      throw error;\n    }));\n  }\n}\nAdminService.ɵfac = function AdminService_Factory(t) {\n  return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminService,\n  factory: AdminService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,6BAA6B;EAEP;EAEvCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAgB,IAAI,CAACC,MAAM,CAAC;EAClD;EAEAC,WAAW,CAACC,KAAkB;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAc,IAAI,CAACH,MAAM,EAAEE,KAAK,CAAC,CACnDE,IAAI,CACHV,UAAU,CAAEW,KAAK,IAAI;MACnB;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACL;;AAnBWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAa,SAAZb,YAAY;EAAAc,YAFX;AAAM","names":["catchError","AdminService","constructor","http","getAdmins","get","apiUrl","createAdmin","admin","post","pipe","error","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AdminCreate } from './interfaces';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  private apiUrl = 'http://localhost:5000/admin';\n\n  constructor(private http: HttpClient) {}\n\n  getAdmins(): Observable<AdminCreate[]> {\n    return this.http.get<AdminCreate[]>(this.apiUrl);\n  }\n\n  createAdmin(admin: AdminCreate): Observable<AdminCreate> {\n    return this.http.post<AdminCreate>(this.apiUrl, admin)\n      .pipe(\n        catchError((error) => {\n          // Handle the error here\n          console.log(error);\n          throw error;\n        })\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}