{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Admin } from './admin';\nlet AdminComponent = class AdminComponent {\n  constructor(adminService, router) {\n    this.adminService = adminService;\n    this.router = router;\n    this.admin = new Admin('', '');\n    this.isLoggedIn = false;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n  onLogin(loginForm) {\n    const {\n      email,\n      password\n    } = loginForm.value;\n    this.adminService.loginAdmin(email, password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin/login']);\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,KAAK,QAAQ,SAAS;AAQxB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,YAA0B,EAC1BC,MAAc;IADd,iBAAY,GAAZD,YAAY;IACZ,WAAM,GAANC,MAAM;IALhB,UAAK,GAAG,IAAIJ,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;IACzB,eAAU,GAAG,KAAK;EAKd;EAEJK,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,YAAY,CAACG,UAAU,EAAE;EAClD;EAEAC,OAAO,CAACC,SAAiB;IACvB,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAE,GAAGF,SAAS,CAACG,KAAK;IAC3C,IAAI,CAACR,YAAY,CAACS,UAAU,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAACG,SAAS,CAAC,MAAK;MAC3D,IAAI,CAACP,UAAU,GAAG,IAAI;MACtB,IAAI,CAACF,MAAM,CAACU,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,CAACZ,YAAY,CAACY,MAAM,EAAE;IAC1B,IAAI,CAACT,UAAU,GAAG,KAAK;IACvB,IAAI,CAACF,MAAM,CAACU,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;CACD;AA1BYb,cAAc,eAL1BF,SAAS,CAAC;EACTiB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWjB,cAAc,CA0B1B;SA1BYA,cAAc;AAkC3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","names":["Component","Admin","AdminComponent","constructor","adminService","router","ngOnInit","isLoggedIn","onLogin","loginForm","email","password","value","loginAdmin","subscribe","navigate","logout","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Admin } from './admin';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  admin = new Admin('', '');\n  isLoggedIn = false;\n\n  constructor(\n    private adminService: AdminService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n\n  onLogin(loginForm: NgForm): void {\n    const { email, password } = loginForm.value;\n    this.adminService.loginAdmin(email, password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    });\n  }\n\n  logout(): void {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin/login']);\n  }\n}\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}