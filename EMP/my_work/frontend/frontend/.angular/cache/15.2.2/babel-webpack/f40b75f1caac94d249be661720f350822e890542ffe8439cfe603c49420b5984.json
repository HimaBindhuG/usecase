{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./admin.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdminComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogin());\n    });\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_div_1_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.admin.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_div_1_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.admin.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 10);\n    i0.ɵɵtext(14, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.admin.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.admin.password);\n  }\n}\nfunction AdminComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Create admin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_div_2_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 8);\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵtext(13, \"Submit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_2_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.logout());\n    });\n    i0.ɵɵtext(15, \"Logout\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.adminForm);\n  }\n}\nexport class AdminComponent {\n  constructor(formBuilder, adminService, router) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.router = router;\n    this.admin = {\n      email: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [4, \"ngIf\"], [1, \"text-danger\", \"mt-3\"], [3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-danger\", \"mt-3\", 3, \"click\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdminComponent_div_1_Template, 15, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdminComponent_div_2_Template, 16, 1, \"div\", 1);\n      i0.ɵɵelementStart(3, \"p\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(5, \" -->\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICAjEC,2BAAyB;IACnBA,qBAAK;IAAAA,iBAAK;IACdA,kCAAiD;IAA3CA;MAAAA;MAAA;MAAA,OAAYA,+BAAS;IAAA,EAAC;IAC1BA,8BAAwB;IACHA,6BAAa;IAAAA,iBAAQ;IACxCA,gCAAoG;IAAnCA;MAAAA;MAAA;MAAA,OAAaA,2CAAmB;IAAA,EAAP;IAA1FA,iBAAoG;IAEtGA,8BAAwB;IACAA,yBAAQ;IAAAA,iBAAQ;IACtCA,iCAAgH;IAAtCA;MAAAA;MAAA;MAAA,OAAaA,8CAAsB;IAAA,EAAP;IAAtGA,iBAAgH;IAElHA,mCAA8C;IAAAA,uBAAM;IAAAA,iBAAS;;;;IANMA,eAAyB;IAAzBA,4CAAyB;IAIhBA,eAA4B;IAA5BA,+CAA4B;;;;;;IAM5GA,2BAAwB;IAClBA,4BAAY;IAAAA,iBAAK;IACrBA,gCAAsD;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IACnDA,8BAAwB;IACHA,6BAAa;IAAAA,iBAAQ;IACxCA,4BAAkG;IACpGA,iBAAM;IACNA,8BAAwB;IACAA,yBAAQ;IAAAA,iBAAQ;IACtCA,6BAA8G;IAChHA,iBAAM;IACNA,mCAA8C;IAAAA,uBAAM;IAAAA,iBAAS;IAG/DA,mCAAuD;IAAnBA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAZhEA,eAAuB;IAAvBA,4CAAuB;;;ADNjC,OAAM,MAAOC,cAAc;EAOzBC,YACUC,WAAwB,EACxBC,YAA0B,EAC1BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IARhB,UAAK,GAAU;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAE1C,eAAU,GAAG,KAAK;IAClB,iBAAY,GAAG,EAAE;EAMb;EAEJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACtCJ,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACY,QAAQ,CAAC;MAChCJ,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACY,QAAQ;KACnC,CAAC;IACF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACR,YAAY,CAACQ,UAAU,EAAE;EAClD;EAEAC,OAAO;IACL,IAAI,CAACT,YAAY,CAACU,UAAU,CAAC,IAAI,CAACC,KAAK,CAACT,KAAK,EAAE,IAAI,CAACS,KAAK,CAACR,QAAQ,CAAC,CAACS,SAAS,CAAC,MAAK;MACjF,IAAI,CAACJ,UAAU,GAAG,IAAI;MACtB,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAAC,IAAI,CAACb,SAAS,CAACc,KAAK,CAAC,CAACP,SAAS,CAAC,MAAK;MACjE,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ,IAAI,CAACpB,YAAY,CAACoB,MAAM,EAAE;IAC1B,IAAI,CAACZ,UAAU,GAAG,KAAK;IACvB,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AA1CWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3B7B,8BAA4B;MAC1BA,gEAaM;MAENA,gEAeM;MAENA,4BAA4B;MAAAA,YAAkB;MAAAA,iBAAI;MA0FjDA,oBAAG;;;MA1HEA,eAAiB;MAAjBA,sCAAiB;MAejBA,eAAgB;MAAhBA,qCAAgB;MAiBMA,eAAkB;MAAlBA,sCAAkB","names":["Validators","i0","AdminComponent","constructor","formBuilder","adminService","router","email","password","ngOnInit","adminForm","group","required","isLoggedIn","onLogin","loginAdmin","admin","subscribe","navigate","error","errorMessage","message","onSubmit","createAdmin","value","logout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Admin } from './interfaces';\nimport { AdminService } from './admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  admin: Admin = { email: '', password: '' };\n  adminForm!: FormGroup;\n  isLoggedIn = false;\n  errorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n\n}\n\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!isLoggedIn\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"admin.email\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"admin.password\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  </div>\n\n  <div *ngIf=\"isLoggedIn\">\n    <h2>Create admin</h2>\n    <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" formControlName=\"email\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" formControlName=\"password\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n\n    <button class=\"btn btn-danger mt-3\" (click)=\"logout()\">Logout</button>\n  </div>\n\n  <p class=\"text-danger mt-3\">{{ errorMessage }}</p>\n</div>\n\n\n\n\n\n<!-- <app-admin></app-admin>\n\n<div>\n    <h2>Admin Dashboard</h2>\n    <p>Welcome, admin!</p>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  \n  <h1>Admin List</h1>\n  \n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Department</th>\n        <th>Address</th>\n        <th>Gender</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Posting</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let admin of admins\">\n        <td>{{ admin.name }}</td>\n        <td>{{ admin.email }}</td>\n        <td>{{ admin.dept }}</td>\n        <td>{{ admin.address }}</td>\n        <td>{{ admin.gender }}</td>\n        <td>{{ admin.dob }}</td>\n        <td>{{ admin.phone }}</td>\n        <td>{{ admin.posting }}</td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <hr>\n  \n  <!-- <h2>Create Admin</h2>\n  \n  <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" formControlName=\"password\">\n    </div>\n    <div>\n      <label for=\"dept\">Department:</label>\n      <input type=\"text\" id=\"dept\" formControlName=\"dept\">\n    </div>\n    <div>\n      <label for=\"address\">Address:</label>\n      <input type=\"text\" id=\"address\" formControlName=\"address\">\n    </div>\n    <div>\n      <label for=\"gender\">Gender:</label>\n      <select id=\"gender\" formControlName=\"gender\">\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dob\">Date of Birth:</label>\n      <input type=\"date\" id=\"dob\" formControlName=\"dob\">\n    </div>\n    <div>\n      <label for=\"phone\">Phone:</label>\n      <input type=\"tel\" id=\"phone\" formControlName=\"phone\">\n    </div>\n    <div>\n      <label for=\"posting\">Posting:</label>\n      <input type=\"text\" id=\"posting\" formControlName=\"posting\">\n    </div>\n    <button type=\"submit\">Create Admin</button>\n  </form> -->\n   -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}