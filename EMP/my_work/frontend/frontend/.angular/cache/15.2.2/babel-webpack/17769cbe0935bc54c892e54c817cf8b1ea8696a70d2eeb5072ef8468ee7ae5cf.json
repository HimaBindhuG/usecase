{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./admin.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdminComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const admin_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.dept);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.gender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.dob);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(admin_r1.posting);\n  }\n}\nexport class AdminComponent {\n  constructor(fb, adminService, router) {\n    this.fb = fb;\n    this.adminService = adminService;\n    this.router = router;\n    this.adminForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required]\n    });\n    this.admins = [];\n  }\n  ngOnInit() {\n    this.getAdmins();\n  }\n  getAdmins() {\n    this.adminService.getAdmins().subscribe(admins => {\n      this.admins = admins;\n    });\n  }\n  onSubmit() {\n    const adminData = this.adminForm.value;\n    this.adminService.createAdmin(adminData).subscribe(() => {\n      // Clear the form and reset validation\n      this.adminForm.reset();\n      Object.keys(this.adminForm.controls).forEach(key => {\n        this.adminForm.get(key)?.setErrors(null);\n      });\n      // Update the list of admins\n      this.getAdmins();\n    });\n  }\n  logout() {\n    this.router.navigate(['/login']);\n  }\n}\nAdminComponent.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AdminService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminComponent,\n  selectors: [[\"app-admin\"]],\n  decls: 76,\n  vars: 2,\n  consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"for\", \"dept\"], [\"type\", \"text\", \"id\", \"dept\", \"formControlName\", \"dept\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"formControlName\", \"gender\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"for\", \"dob\"], [\"type\", \"date\", \"id\", \"dob\", \"formControlName\", \"dob\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\"], [\"for\", \"posting\"], [\"type\", \"text\", \"id\", \"posting\", \"formControlName\", \"posting\"], [\"type\", \"submit\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Admin Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"Welcome, admin!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AdminComponent_Template_button_click_5_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(6, \"Logout\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h1\");\n      i0.ɵɵtext(8, \"Admin List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"table\")(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Posting\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"tbody\");\n      i0.ɵɵtemplate(29, AdminComponent_tr_29_Template, 17, 8, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(30, \"hr\");\n      i0.ɵɵelementStart(31, \"h2\");\n      i0.ɵɵtext(32, \"Create Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_33_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(34, \"div\")(35, \"label\", 3);\n      i0.ɵɵtext(36, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\")(39, \"label\", 5);\n      i0.ɵɵtext(40, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\")(43, \"label\", 7);\n      i0.ɵɵtext(44, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\")(47, \"label\", 9);\n      i0.ɵɵtext(48, \"Department:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\")(51, \"label\", 11);\n      i0.ɵɵtext(52, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\")(55, \"label\", 13);\n      i0.ɵɵtext(56, \"Gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"select\", 14)(58, \"option\", 15);\n      i0.ɵɵtext(59, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"option\", 16);\n      i0.ɵɵtext(61, \"Female\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(62, \"div\")(63, \"label\", 17);\n      i0.ɵɵtext(64, \"Date of Birth:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(65, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"div\")(67, \"label\", 19);\n      i0.ɵɵtext(68, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(69, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"div\")(71, \"label\", 21);\n      i0.ɵɵtext(72, \"Posting:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(73, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(74, \"button\", 23);\n      i0.ɵɵtext(75, \"Create Admin\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.admins);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.adminForm);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AdminComponent","constructor","fb","adminService","router","adminForm","group","name","required","email","password","dept","address","gender","dob","phone","posting","admins","ngOnInit","getAdmins","subscribe","onSubmit","adminData","value","createAdmin","reset","Object","keys","controls","forEach","key","get","setErrors","logout","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AdminService } from './admin.service';\nimport { Admin } from './interfaces';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n})\nexport class AdminComponent implements OnInit {\n  adminForm: FormGroup;\n  admins: Admin[] | null | undefined;\n\n  constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n    this.adminForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password:['', Validators.required],\n      dept: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      phone: ['', Validators.required],\n      posting: ['', Validators.required],\n    });\n    this.admins = [];\n  }\n\n  ngOnInit():void {\n    this.getAdmins();\n  }\n\n  getAdmins(): void {\n    this.adminService.getAdmins().subscribe(admins => {\n      this.admins = admins;\n    });\n  }\n\n  onSubmit(): void {\n    const adminData = this.adminForm.value;\n    this.adminService.createAdmin(adminData).subscribe(() => {\n      // Clear the form and reset validation\n      this.adminForm.reset();\n      Object.keys(this.adminForm.controls).forEach(key => {\n        this.adminForm.get(key)?.setErrors(null);\n      });\n      // Update the list of admins\n      this.getAdmins();\n    });\n  }\n\n  logout() {\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- <app-admin></app-admin> -->\n\n<div>\n    <h2>Admin Dashboard</h2>\n    <p>Welcome, admin!</p>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  \n  <h1>Admin List</h1>\n  \n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Department</th>\n        <th>Address</th>\n        <th>Gender</th>\n        <th>Date of Birth</th>\n        <th>Phone</th>\n        <th>Posting</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let admin of admins\">\n        <td>{{ admin.name }}</td>\n        <td>{{ admin.email }}</td>\n        <td>{{ admin.dept }}</td>\n        <td>{{ admin.address }}</td>\n        <td>{{ admin.gender }}</td>\n        <td>{{ admin.dob }}</td>\n        <td>{{ admin.phone }}</td>\n        <td>{{ admin.posting }}</td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <hr>\n  \n  <h2>Create Admin</h2>\n  \n  <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" formControlName=\"password\">\n    </div>\n    \n    \n    <div>\n      <label for=\"dept\">Department:</label>\n      <input type=\"text\" id=\"dept\" formControlName=\"dept\">\n    </div>\n    <div>\n      <label for=\"address\">Address:</label>\n      <input type=\"text\" id=\"address\" formControlName=\"address\">\n    </div>\n    <div>\n      <label for=\"gender\">Gender:</label>\n      <select id=\"gender\" formControlName=\"gender\">\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dob\">Date of Birth:</label>\n      <input type=\"date\" id=\"dob\" formControlName=\"dob\">\n    </div>\n    <div>\n      <label for=\"phone\">Phone:</label>\n      <input type=\"tel\" id=\"phone\" formControlName=\"phone\">\n    </div>\n    <div>\n      <label for=\"posting\">Posting:</label>\n      <input type=\"text\" id=\"posting\" formControlName=\"posting\">\n    </div>\n    <button type=\"submit\">Create Admin</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}