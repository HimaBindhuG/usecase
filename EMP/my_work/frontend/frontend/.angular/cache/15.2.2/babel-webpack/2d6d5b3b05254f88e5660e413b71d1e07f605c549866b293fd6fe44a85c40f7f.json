{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AdminComponent = class AdminComponent {\n  constructor(formBuilder, adminService, router) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.router = router;\n    this.admin = {\n      email: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YACUC,WAAwB,EACxBC,YAA0B,EAC1BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IARhB,UAAK,GAAU;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAE1C,eAAU,GAAG,KAAK;IAClB,iBAAY,GAAG,EAAE;EAMb;EAEJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACtCJ,KAAK,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACW,QAAQ,CAAC;MAChCJ,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACW,QAAQ;KACnC,CAAC;IACF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACR,YAAY,CAACQ,UAAU,EAAE;EAClD;EAEAC,OAAO;IACL,IAAI,CAACT,YAAY,CAACU,UAAU,CAAC,IAAI,CAACC,KAAK,CAACT,KAAK,EAAE,IAAI,CAACS,KAAK,CAACR,QAAQ,CAAC,CAACS,SAAS,CAAC,MAAK;MACjF,IAAI,CAACJ,UAAU,GAAG,IAAI;MACtB,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAAC,IAAI,CAACb,SAAS,CAACc,KAAK,CAAC,CAACP,SAAS,CAAC,MAAK;MACjE,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;IACzC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ,IAAI,CAACpB,YAAY,CAACoB,MAAM,EAAE;IAC1B,IAAI,CAACZ,UAAU,GAAG,KAAK;IACvB,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CAED;AA5CYhB,cAAc,eAL1BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW1B,cAAc,CA4C1B;SA5CYA,cAAc;AAqD3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","names":["Component","Validators","AdminComponent","constructor","formBuilder","adminService","router","email","password","ngOnInit","adminForm","group","required","isLoggedIn","onLogin","loginAdmin","admin","subscribe","navigate","error","errorMessage","message","onSubmit","createAdmin","value","logout","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Admin } from '../admin';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  admin: Admin = { email: '', password: '' };\n  adminForm!: FormGroup;\n  isLoggedIn = false;\n  errorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.adminForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isLoggedIn = this.adminService.isLoggedIn();\n  }\n\n  onLogin() {\n    this.adminService.loginAdmin(this.admin.email, this.admin.password).subscribe(() => {\n      this.isLoggedIn = true;\n      this.router.navigate(['/admin/dashboard']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  onSubmit() {\n    this.adminService.createAdmin(this.adminForm.value).subscribe(() => {\n      this.router.navigate(['/admin']);\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n\n  logout() {\n    this.adminService.logout();\n    this.isLoggedIn = false;\n    this.router.navigate(['/admin']);\n  }\n\n}\n\n\n \n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n// import { AdminService } from './admin.service';\n// import { Admin } from './interfaces';\n// import { Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-admin',\n//   templateUrl: './admin.component.html',\n//   styleUrls: ['./admin.component.css'],\n// })\n// export class AdminComponent implements OnInit {\n//   adminForm: FormGroup;\n//   admins: Admin[] | null | undefined;\n//   admin = { email: '', password: '' };\n\n//   constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) {\n//     this.adminForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', Validators.required],\n//       password:['', Validators.required],\n//       dept: ['', Validators.required],\n//       address: ['', Validators.required],\n//       gender: ['', Validators.required],\n//       dob: ['', Validators.required],\n//       phone: ['', Validators.required],\n//       posting: ['', Validators.required],\n//     });\n//     this.admins = [];\n//   }\n\n//   ngOnInit():void {\n//     this.getAdmins();\n//   }\n\n//   getAdmins(): void {\n//     this.adminService.getAdmins().subscribe(admins => {\n//       this.admins = admins;\n//     });\n//   }\n\n//   onSubmit(): void {\n//     const adminData = this.adminForm.value;\n//     this.adminService.createAdmin(adminData).subscribe(() => {\n//       // Clear the form and reset validation\n//       this.adminForm.reset();\n//       Object.keys(this.adminForm.controls).forEach(key => {\n//         this.adminForm.get(key)?.setErrors(null);\n//       });\n//       // Update the list of admins\n//       this.getAdmins();\n//     });\n//   }\n\n//   logout() {\n//     this.router.navigate(['/login']);\n//   }\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}