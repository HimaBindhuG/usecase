{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(http, authService, router) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n  } // added router parameter\n  submitForm(form) {\n    const username = form.value['username'];\n    const password = form.value['password'];\n    const loginType = form.value['login-type'];\n    const email = form.value.email;\n    // Perform login validation here based on the login type\n    if (loginType === 'employee') {\n      /// For employee login validation\n      this.http.post('http://127.0.0.1:3000/employee/', {\n        username,\n        password\n      }).subscribe(response => {\n        console.log('Employee login successful');\n        localStorage.setItem('token', response.token);\n        this.authService.setLoggedIn(true);\n      }, error => {\n        console.error('Employee login failed', error);\n      });\n    } else if (loginType === 'manager') {\n      // Manager login validation\n      this.http.post('http://127.0.0.1:9000/manager/', {\n        username,\n        password\n      }).subscribe(response => {\n        console.log('Manager login successful');\n        localStorage.setItem('token', response.token);\n        this.authService.setLoggedIn(true);\n      }, error => {\n        console.error('Manager login failed', error);\n      });\n    } else if (loginType === 'admin') {\n      // Admin login validation\n      this.http.post('http://localhost:5000/admin/login', {\n        email,\n        password\n      }).subscribe(response => {\n        console.log('Admin login successful');\n        localStorage.setItem('token', response.token);\n        this.authService.setIsAuthenticated(true);\n        if (response && response.admin) {\n          this.router.navigate(['/admin/register']);\n        } else {\n          // Navigate to admin dashboard\n        }\n      }, error => {\n        console.error('Admin login failed', error);\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 0,\n  consts: [[3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"login-type\"], [\"id\", \"login-type\", \"name\", \"login-type\", \"ngModel\", \"\", \"required\", \"\"], [\"value\", \"\"], [\"value\", \"employee\"], [\"value\", \"manager\"], [\"value\", \"admin\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.submitForm(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Login Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 7)(17, \"option\", 8);\n      i0.ɵɵtext(18, \"Select Login Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 9);\n      i0.ɵɵtext(20, \"Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 10);\n      i0.ɵɵtext(22, \"Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 11);\n      i0.ɵɵtext(24, \"Admin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"button\", 12);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["LoginComponent","constructor","http","authService","router","submitForm","form","username","value","password","loginType","email","post","subscribe","response","console","log","localStorage","setItem","token","setLoggedIn","error","setIsAuthenticated","admin","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Hima.g\\usecase\\frontend\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'; // added import statement for Router module\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {} // added router parameter\n\n  submitForm(form: NgForm) {\n    const username = form.value['username'];\n    const password = form.value['password'];\n    const loginType = form.value['login-type'];\n    const email = form.value.email;\n\n    // Perform login validation here based on the login type\n    if (loginType === 'employee') {\n      /// For employee login validation\nthis.http.post('http://127.0.0.1:3000/employee/', { username, password }).subscribe((response: any) => {\n  console.log('Employee login successful');\n  localStorage.setItem('token', response.token);\n  this.authService.setLoggedIn(true);\n}, (error) => {\n  console.error('Employee login failed', error);\n});\n    } \n    else if (loginType === 'manager') {\n      // Manager login validation\n      this.http.post('http://127.0.0.1:9000/manager/', { username, password }).subscribe((response: any) => {\n  console.log('Manager login successful');\n  localStorage.setItem('token', response.token);\n  this.authService.setLoggedIn(true);\n}, (error) => {\n  console.error('Manager login failed', error);\n});\n    }  \n    else if (loginType === 'admin') {\n      // Admin login validation\n      this.http.post('http://localhost:5000/admin/login', { email, password }).subscribe((response: any) => {\n  console.log('Admin login successful');\n  localStorage.setItem('token', response.token);\n  this.authService.setIsAuthenticated(true);\n  if (response && response.admin) {\n    this.router.navigate(['/admin/register']);\n  } else {\n    // Navigate to admin dashboard\n  }\n}, (error) => {\n  console.error('Admin login failed', error);\n});\n    }\n\n    \n  }\n}\n","<div>\n  <h2>Login</h2>\n  <form (ngSubmit)=\"submitForm(loginForm)\" #loginForm=\"ngForm\">\n    <div>\n      <label for=\"username\">Username</label>\n      <input type=\"text\" id=\"username\" name=\"username\" ngModel required>\n    </div>\n    <div>\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" name=\"password\" ngModel required>\n    </div>\n    <div>\n      <label for=\"login-type\">Login Type</label>\n      <select id=\"login-type\" name=\"login-type\" ngModel required>\n        <option value=\"\">Select Login Type</option>\n        <option value=\"employee\">Employee</option>\n        <option value=\"manager\">Manager</option>\n        <option value=\"admin\">Admin</option>\n      </select>\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}